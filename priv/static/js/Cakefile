fs = require "fs"
{exec, spawn} = require "child_process"
appFiles = [
  'src/app.coffee'
  'src/alsoapp.coffee'
]

task 'minify', 'Minify the resulting application file after build.', ->
  exec 'java -jar "/home/$USER/Public/compiler.jar" --js lib/app.js --js_output_file lib/app.closure.js', (err, stdout, stderr) ->
      throw err if err
      console.log "\n#{stdout + stderr}" if stdout or stderr

task "build", "Build from src/* to lib/*", ->
  fs.exists "lib/", (exists) ->
    if exists
      compile()
    else
      fs.mkdir "lib/", (err) ->
        unless err
          console.log "Created lib/"
          compile()

compile = () ->
  appContents = new Array remaining = appFiles.length
  for file, index in appFiles then do (file, index) ->
    fs.readFile file, 'utf8', (err, fileContents) ->
      throw err if err
      appContents[index] = fileContents
      fs.exists 'tmp/', (exists) ->
        if exists
          process() if --remaining is 0
        else
          fs.mkdir 'tmp/', (err) ->
            unless err
              console.log 'Created tmp/'
              process()

  process = ->
    fs.writeFile 'tmp/app.coffee', appContents.join('\n\n'), 'utf8', (err) ->
      throw err if err
      exec "coffee --compile --output lib/ tmp/app.coffee", (err, stdout, stderr) ->
        throw err if err
        fs.unlink 'tmp/app.coffee', (err) ->
          throw err if err
          console.log "Built okay!"
        console.log "\n#{stdout+stderr}" if stdout or stderr
